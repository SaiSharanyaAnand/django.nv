name: DevSecOps for a Polygot Application
on:
  push:                                       
    branches:                              
      - main

jobs:
  # build:
  #   name: Build Job - Python
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.6'

  #     - run: |
  #         pip3 install --upgrade virtualenv
  #         virtualenv env
  #         source env/bin/activate
  #         pip install -r requirements.txt
  #         python manage.py check

  # test:
  #   name: Functional Testing Job - Python
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.6'

  #     - run: |
  #         pip3 install --upgrade virtualenv
  #         virtualenv env
  #         source env/bin/activate
  #         pip install -r requirements.txt
  #         python manage.py test taskManager

  # oast-backend:
  #   name: SAST Backend Job - Python - Safety
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - uses: actions/checkout@v3

  #     - run: docker run --rm -v $(pwd):/src hysnsec/safety check -r requirements.txt --json | tee oast-results.json
  #       continue-on-error: true             # allow the build to fail, similar to "allow_failure: true" in GitLab

  #     - uses: actions/upload-artifact@v3.1.1
  #       with:
  #         name: Safety
  #         path: oast-results.json
  #       if: always()                        # what is this for?

  # oast-frontend:
  #   name: SAST Frontend Job - Node JS - RetireJS
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '10.x'

  #     - run: npm install

  #     - run: docker run --rm -v $(pwd):/src -w /src hysnsec/retire --outputformat json --outputpath retirejs-report.json --severity high
  #       continue-on-error: true

  #     - uses: actions/upload-artifact@v3.1.1
  #       with:
  #         name: RetireJS
  #         path: retirejs-report.json
  #       if: always()                        # what is this for?

  # oast-snyk:
  #   name: Secret Scanning - Node JS - Synk
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - uses: actions/checkout@master      
  #     - uses: snyk/actions/setup@master
  #     - uses: actions/setup-go@v1
  #       with:
  #         go-version: "1.13"

  #     - uses: actions/setup-node@v3.5.1
  #       with:
  #         node-version: '10.x'

  #     - name: Install Node modules
  #       run: npm install

  #     - name: Run Snyk
  #       run: snyk test --json > snyk-results.json
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       continue-on-error: true

  #     - uses: actions/upload-artifact@v3.1.1
  #       with:
  #         name: Snyk               
  #         path: snyk-results.json
  #       if: always()

  # component-analysis:
  #   name: Component Analysis - Python - NPM Audit
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - name: Checkout the Code
  #       uses: actions/checkout@v3

  #     - name: Install the Libraries or Node Modules
  #       run: npm install

  #     - name: Perform Node.js Audit and Output to Json file
  #       run: npm audit --json >> node-audit-results.json
  #       continue-on-error: true

  #     - name: List the files available
  #       run: ls
      
  #     - name: Upload the Output as an artifact
  #       uses: actions/upload-artifact@v3.1.1
  #       with:
  #         name: NodeAudit Output
  #         path: node-audit-results.json
  #       if: always()

  secret-scanning:
    name: Secret Scanning - Python - Truffle Hog
    runs-on: ubuntu-latest
    #needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.6'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt

      - name: Run Truffle Hog
        run: docker run --rm -v $(pwd):/src hysnsec/trufflehog --json --regex --entropy=False file:///src > trufflehog-results.json
        continue-on-error: true

  flake8-lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          ignore: "F401"
          exclude: "src/ignoreme.py"
          max-line-length: "100"
          path: "src"
          plugins: "flake8-bugbear==22.1.11 flake8-black"

  docker-lint:
    name: Lint - Dockerfile
    runs-on: ubuntu-latest
    #needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Run Hadolint
        run: docker run --rm -i hadolint/hadolint < Dockerfile
        continue-on-error: true